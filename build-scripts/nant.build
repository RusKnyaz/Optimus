<?xml version="1.0"?>
<project name="Optimus" default="all" basedir=".">
    <property name="work.d"      value="${environment::get-variable('WORKSPACE')}" />
	<!-- Variables -->
	<property name="config.environment" value="nunit" />
	<property name="define"      value="" />
	<property name="is.production" value = "false"/>

	<!-- Target frameworks -->
	<property name="net-3.5" value="mono-3.5"/>
	<property name="net-4.0" value="mono-4.0"/>
	<property name="iswin" value="false"/>
	<property name="iswin" value= "true" if="${environment::variable-exists('ISWIN')}"/>
	<property name="net-3.5" value="net-3.5" if="${iswin == 'true'}"/>
	<property name="net-4.0" value="net-4.0" if="${iswin == 'true'}"/>
	<property name="build.exe" value="xbuild"/>
	<property name="build.exe" value="C:\Windows\Microsoft.NET\Framework64\v4.0.30319\msbuild.exe" if="${iswin == 'true'}"/>
	
		
	<!-- Property -->
	<property name="buildnumber" value="${environment::get-variable('BUILD_NUMBER')}"/>
	<property name="version" value="1.0.${buildnumber}.0"/>
	<property name="config.work.d"      value="${work.d}/${config.environment}" />
	
	<!-- Binaries-->        
	<property name="bin.d"       value="${work.d}/bin"/>
	<!-- Test results-->
	<property name="test.res.d"       value="${work.d}/test-results"/>
	
	<!-- Sources -->
	<property name="sources.d" value="${work.d}/source"/>
	<property name="sources.assemblyversioninfo.cs" value="${sources.d}/AssemblyVersionInfo.cs"/>
	<property name="solution" value="${sources.d}/Knyaz.Optimus.sln"/>
	<property name="nuget.exe" value="${sources.d}/.nuget/NuGet.exe"/>	
	
	<!-- Publish properties-->
	<property name="publish.d" value="${work.d}/publish"/>
	<property name="artifacts.d" value="${work.d}/artifacts"/>
	<property name="optimus.dll" value="Knyaz.Optimus.dll"/>
	<property name="bin.optimus.dll" value="${bin.d}/${config.environment}/${optimus.dll}"/>
	
	<!--Targets -->
	<target name="clean" description="Remove binary files.">
		<echo message="Target started at: ${datetime::now()}."/>
		<delete failonerror="false" dir= "${bin.d}"/>
		<delete failonerror="false" dir= "${test.res.d}"/>
		<delete failonerror="false" dir= "${artifacts.d}"/>
	</target>
	
	<target name="set-props">
		<property name="bin.d"       value="${work.d}/bin/${config.environment}"/>
		
		<property name="define" value="DEBUG;NUNIT" if="${config.environment == 'nunit'}"/>
		<property name="define" value="TRACE;RELEASE" if="${config.environment == 'release'}"/>
		<property name="define" value="TRACE;DEBUG" if="${config.environment == 'debug'}"/>
		
		<property name="msconfig" value="Debug" if="${config.environment == 'nunit'}"/>
		<property name="msconfig" value="Release" if="${config.environment == 'release'}"/>
		<property name="msconfig" value="Debug" if="${config.environment == 'debug'}"/>
	</target>

	<target name="build" description="Compiles the source code.">
		<echo message="Target started at: ${datetime::now()}."/>
		<property name="nant.settings.currentframework" value="${net-4.0}" />
		
		<call target="set-props" />
		
		<property name="args" value="&quot;${solution}&quot;"/>
		<property name="args" value="${args} /t:Knyaz.Optimus:Rebuild /p:Configuration=${msconfig}"/>
		
		<echo message="exec: ${build.exe} ${args}"/>
		
		<exec program="${build.exe}" commandline="${args}"/>
		
		<copy todir="${bin.d}">
			<fileset>
				<include name="${sources.d}/Knyaz.Optimus/bin/${msconfig}/*.dll"/>
			</fileset>
		</copy>
		<echo message="Build finished at: ${datetime::now()}"/>
	</target>

	<target name="nuget-restore">
		<exec if="${iswin}"
		      program="${nuget.exe}" workingdir = "${work.d}/sources" commandline="install .nuget\packages.config -o packages"/>
		<exec if="${not iswin}"
		      program="mono" workingdir = "${sources.d}" commandline="${nuget.exe} install .nuget/packages.config -o packages -ConfigFile .nuget/NuGet.config"/>
	</target>
		
	<target name="artifacts-zip" description="Create zip archive from 'publish' directory">
		<mkdir dir="${artifacts.d}" />
		<zip zipfile="${artifacts.d}/optimus.zip">
			<fileset basedir="${publish.d}">
			        <include name="**/*" />
			</fileset>
		</zip>
	</target>

	<target name="artifacts-nuget" description="Create nuget package from 'bin' directory">
		<mkdir dir="${artifacts.d}" />
		<copy todir="${bin.d}">
			<fileset>
				<include name="${work.d}/build-scripts/package.nuspec"/>
			</fileset>
		</copy>
		<property name="args" value="pack ${bin.d}/Package.nuspec -Properties version=${version}"/>
		<exec program="mono" commandline="${nuget.exe} ${args}" workingdir = "${artifacts.d}" if="${not iswin}"/>
		<exec program="${nuget.exe}" commandline="${args}" workingdir = "${artifacts.d}" if="${iswin}"/>
	</target>
	
	<target name="nunit-run" description="Run unit-tests">
		<echo message="Launch NUnit." />
		<mkdir dir="${test.res.d}" />
		<exec program="nunit-console" commandline="&quot;${bin.optimus.dll}&quot; -xml=&quot;${test.res.d}/${optimus.dll}-results.xml&quot; -noshadow"/>
		<echo message="Target completed at: ${datetime::now()}." />
	</target>
	
	<target name="config-nunit">
		<property name = "config.environment" value="nunit"/>
	</target>
	
	<target name="build-nunit" >
		<call target="config-nunit"/>
		<call target="build" />
	</target>
	<target name="build-release" >
		<property name = "config.environment" value="release"/>
		<call target="build" />
	</target>
	<target name="build-debug" >
		<property name = "config.environment" value="debug"/>
		<call target="build" />
	</target>
	
	<target name="config-release">
		<property name = "config.environment" value="release"/>
	</target>

	<target name="test-and-release">
		<call target="nuget-restore"/>
		<call target="build-nunit"/>
		<call target="nunit-run"/>
		<call target="build-release"/>
		<call target="artifacts-nuget"/>
	</target>
	
</project>
