//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Knyaz.Optimus.Tests.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Knyaz.Optimus.Tests.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на /*!
        /// * jQuery JavaScript Library v2.1.3
        /// * http://jquery.com/
        /// *
        /// * Includes Sizzle.js
        /// * http://sizzlejs.com/
        /// *
        /// * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
        /// * Released under the MIT license
        /// * http://jquery.org/license
        /// *
        /// * Date: 2014-12-18T15:11Z
        /// */
        ///
        ///(function( global, factory ) {
        ///
        ///	if ( typeof module === &quot;object&quot; &amp;&amp; typeof module.exports === &quot;object&quot; ) {
        ///		// For CommonJS and CommonJS-like environments where a proper `window`
        ///		// is present, execute the factory and get jQue [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string jquery_2_1_3 {
            get {
                return ResourceManager.GetString("jquery_2_1_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на /*!
        /// * jQuery Form Plugin
        /// * version: 3.51.0-2014.06.20
        /// * Requires jQuery v1.5 or later
        /// * Copyright (c) 2014 M. Alsup
        /// * Examples and documentation at: http://malsup.com/jquery/form/
        /// * Project repository: https://github.com/malsup/form
        /// * Dual licensed under the MIT and GPL licenses.
        /// * https://github.com/malsup/form#copyright-and-license
        /// */
        ////*global ActiveXObject */
        ///
        ///// AMD support
        ///(function (factory) {
        ///	&quot;use strict&quot;;
        ///	if (typeof define === &apos;function&apos; &amp;&amp; define.amd) {
        ///		// using AMD; re [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string jQuery_Form {
            get {
                return ResourceManager.GetString("jQuery_Form", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на /*!
        /// * Knockout JavaScript library v3.3.0
        /// * (c) Steven Sanderson - http://knockoutjs.com/
        /// * License: MIT (http://www.opensource.org/licenses/mit-license.php)
        /// */
        ///
        ///(function(){
        ///var DEBUG=true;
        ///(function(undefined){
        ///    // (0, eval)(&apos;this&apos;) is a robust way of getting a reference to the global object
        ///    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023
        ///    var window = this || (0, eval)(&apos;this&apos;),
        ///        document = window[&apos;document&apos;],
        ///        navigator = [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string knockout {
            get {
                return ResourceManager.GetString("knockout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 
        ///&lt;html&gt;
        ///
        ///&lt;head&gt;
        ///&lt;!--&lt;meta HTTP-EQUIV=&quot;Content-Type&quot; CONTENT=&quot;text/html; charset=ISO-8859-1&quot;&gt;  --&gt;
        ///
        ///&lt;title&gt;Large HTML page with images&lt;/title&gt;
        ///
        ///&lt;!-- The following link block and style block present methods how to load external CSS documents.
        ///     The link tag forces an immediate download of the CSS document whereas the import clause in
        ///     the style block has the document downloaded some random time later.  --&gt;
        ///
        ///&lt;link href=&quot;htmlparser/sections.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;
        ///
        ///
        ///&lt;!--
        ///&lt;s [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Large_Html {
            get {
                return ResourceManager.GetString("Large_Html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на /** vim: et:ts=4:sw=4:sts=4
        /// * @license RequireJS 2.1.17 Copyright (c) 2010-2015, The Dojo Foundation All Rights Reserved.
        /// * Available via the MIT or new BSD license.
        /// * see: http://github.com/jrburke/requirejs for details
        /// */
        /////Not using strict: uneven strict support in browsers, #392, and causes
        /////problems with requirejs.exec()/transpiler plugins that may not be strict.
        ////*jslint regexp: true, nomen: true, sloppy: true */
        ////*global window, navigator, document, importScripts, setTimeout, opera */
        ///        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string requirejs {
            get {
                return ResourceManager.GetString("requirejs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на /** vim: et:ts=4:sw=4:sts=4
        /// * @license RequireJS 2.1.17 Copyright (c) 2010-2015, The Dojo Foundation All Rights Reserved.
        /// * Available via the MIT or new BSD license.
        /// * see: http://github.com/jrburke/requirejs for details
        /// */
        /////Not using strict: uneven strict support in browsers, #392, and causes
        /////problems with requirejs.exec()/transpiler plugins that may not be strict.
        ////*jslint regexp: true, nomen: true, sloppy: true */
        ////*global window, navigator, document, importScripts, setTimeout, opera */
        ///        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string requirejsl {
            get {
                return ResourceManager.GetString("requirejsl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на //https://github.com/rniemeyer/SamplePresentation/blob/master/js/stringTemplateEngine.js
        ///define(function () {
        ///    if (!ko) {
        ///        //when running during optimization build, knockout will not be defined
        ///        return;
        ///    }
        ///
        ///    //define a template source that simply treats the template name as its content
        ///    var templates = {},
        ///		data = {},
        ///		engine = new ko.nativeTemplateEngine();
        ///
        ///    ko.templateSources.stringTemplate = function (template) {
        ///        this.templateName = template;
        ///    };
        ///
        ///    ko.uti [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string stringTemplateEngine {
            get {
                return ResourceManager.GetString("stringTemplateEngine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на define([&quot;require&quot;, &quot;text&quot;, &quot;stringTemplateEngine&quot;], function (require, text) {
        ///    var loader = {
        ///        load: function (name, req, load, config) {
        ///            var onLoad = config.isBuild ? load : function (content) {
        ///                var tmpDiv = $(&quot;&lt;div&gt;&quot;);
        ///                tmpDiv.html(content);
        ///                var scripts = tmpDiv.find(&quot;script[type=&apos;text/html&apos;]&quot;);
        ///                if (scripts.length &gt; 0) {
        ///                    scripts.each(function (_) {
        ///                        var templateId = $(t [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string template {
            get {
                return ResourceManager.GetString("template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на /**
        /// * @license RequireJS text 2.0.10 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.
        /// * Available via the MIT or new BSD license.
        /// * see: http://github.com/requirejs/text for details
        /// */
        ////*jslint regexp: true */
        ////*global require, XMLHttpRequest, ActiveXObject,
        ///  define, window, process, Packages,
        ///  java, location, Components, FileUtils */
        ///
        ///define([&apos;module&apos;], function (module) {
        ///    &apos;use strict&apos;;
        ///
        ///    var text, fs, Cc, Ci, xpcIsWindows,
        ///        progIds = [&apos;Msxml2.XMLHTTP&apos;, &apos;Microsoft.XMLH [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string text {
            get {
                return ResourceManager.GetString("text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на function Detector() {
        ///	&quot;use strict&quot;;
        ///	var e = &quot;detector&quot;, t = document.documentElement;
        ///	return {
        ///		isBorderRadiusSupported: function() {
        ///			var e = document.documentElement.style;
        ///			return &quot;string&quot; == typeof e.borderRadius || &quot;string&quot; == typeof e.WebkitBorderRadius || &quot;string&quot; == typeof e.KhtmlBorderRadius || &quot;string&quot; == typeof e.MozBorderRadius
        ///		},
        ///		getCSS3TransformProperty: function() {
        ///			for (var e = document.documentElement.style, t = [&quot;transform&quot;, &quot;MozTransform&quot;, &quot;MsTransform&quot;, &quot;WebkitTra [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ya {
            get {
                return ResourceManager.GetString("ya", resourceCulture);
            }
        }
    }
}
